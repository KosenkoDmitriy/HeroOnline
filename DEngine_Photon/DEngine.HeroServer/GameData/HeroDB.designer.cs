#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DEngine.HeroServer.GameData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GameDB_01")]
	public partial class HeroDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActionLog(ActionLog instance);
    partial void UpdateActionLog(ActionLog instance);
    partial void DeleteActionLog(ActionLog instance);
    partial void InsertPillageLog(PillageLog instance);
    partial void UpdatePillageLog(PillageLog instance);
    partial void DeletePillageLog(PillageLog instance);
    partial void InsertEnemyCache(EnemyCache instance);
    partial void UpdateEnemyCache(EnemyCache instance);
    partial void DeleteEnemyCache(EnemyCache instance);
    partial void InsertCashLog(CashLog instance);
    partial void UpdateCashLog(CashLog instance);
    partial void DeleteCashLog(CashLog instance);
    partial void InsertArenaLog(ArenaLog instance);
    partial void UpdateArenaLog(ArenaLog instance);
    partial void DeleteArenaLog(ArenaLog instance);
    partial void InsertRoleBase(RoleBase instance);
    partial void UpdateRoleBase(RoleBase instance);
    partial void DeleteRoleBase(RoleBase instance);
    partial void InsertRoleExtra(RoleExtra instance);
    partial void UpdateRoleExtra(RoleExtra instance);
    partial void DeleteRoleExtra(RoleExtra instance);
    partial void InsertSkillBase(SkillBase instance);
    partial void UpdateSkillBase(SkillBase instance);
    partial void DeleteSkillBase(SkillBase instance);
    partial void InsertItemBase(ItemBase instance);
    partial void UpdateItemBase(ItemBase instance);
    partial void DeleteItemBase(ItemBase instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertAccountLog(AccountLog instance);
    partial void UpdateAccountLog(AccountLog instance);
    partial void DeleteAccountLog(AccountLog instance);
    partial void InsertGiftBox(GiftBox instance);
    partial void UpdateGiftBox(GiftBox instance);
    partial void DeleteGiftBox(GiftBox instance);
    partial void InsertUserEx(UserEx instance);
    partial void UpdateUserEx(UserEx instance);
    partial void DeleteUserEx(UserEx instance);
    partial void InsertMailBox(MailBox instance);
    partial void UpdateMailBox(MailBox instance);
    partial void DeleteMailBox(MailBox instance);
    partial void InsertOnlineLog(OnlineLog instance);
    partial void UpdateOnlineLog(OnlineLog instance);
    partial void DeleteOnlineLog(OnlineLog instance);
    partial void InsertFriend(Friend instance);
    partial void UpdateFriend(Friend instance);
    partial void DeleteFriend(Friend instance);
    partial void InsertShop(Shop instance);
    partial void UpdateShop(Shop instance);
    partial void DeleteShop(Shop instance);
    partial void InsertHouse(House instance);
    partial void UpdateHouse(House instance);
    partial void DeleteHouse(House instance);
    partial void InsertLand(Land instance);
    partial void UpdateLand(Land instance);
    partial void DeleteLand(Land instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleHire(RoleHire instance);
    partial void UpdateRoleHire(RoleHire instance);
    partial void DeleteRoleHire(RoleHire instance);
    #endregion
		
		public HeroDBDataContext() : 
				base(global::DEngine.HeroServer.Properties.Settings.Default.GameDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HeroDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HeroDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HeroDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HeroDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActionLog> ActionLogs
		{
			get
			{
				return this.GetTable<ActionLog>();
			}
		}
		
		public System.Data.Linq.Table<PillageLog> PillageLogs
		{
			get
			{
				return this.GetTable<PillageLog>();
			}
		}
		
		public System.Data.Linq.Table<EnemyCache> EnemyCaches
		{
			get
			{
				return this.GetTable<EnemyCache>();
			}
		}
		
		public System.Data.Linq.Table<CashLog> CashLogs
		{
			get
			{
				return this.GetTable<CashLog>();
			}
		}
		
		public System.Data.Linq.Table<ArenaLog> ArenaLogs
		{
			get
			{
				return this.GetTable<ArenaLog>();
			}
		}
		
		public System.Data.Linq.Table<RoleBase> RoleBases
		{
			get
			{
				return this.GetTable<RoleBase>();
			}
		}
		
		public System.Data.Linq.Table<RoleExtra> RoleExtras
		{
			get
			{
				return this.GetTable<RoleExtra>();
			}
		}
		
		public System.Data.Linq.Table<SkillBase> SkillBases
		{
			get
			{
				return this.GetTable<SkillBase>();
			}
		}
		
		public System.Data.Linq.Table<ItemBase> ItemBases
		{
			get
			{
				return this.GetTable<ItemBase>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<AccountLog> AccountLogs
		{
			get
			{
				return this.GetTable<AccountLog>();
			}
		}
		
		public System.Data.Linq.Table<GiftBox> GiftBoxes
		{
			get
			{
				return this.GetTable<GiftBox>();
			}
		}
		
		public System.Data.Linq.Table<UserEx> UserExes
		{
			get
			{
				return this.GetTable<UserEx>();
			}
		}
		
		public System.Data.Linq.Table<MailBox> MailBoxes
		{
			get
			{
				return this.GetTable<MailBox>();
			}
		}
		
		public System.Data.Linq.Table<OnlineLog> OnlineLogs
		{
			get
			{
				return this.GetTable<OnlineLog>();
			}
		}
		
		public System.Data.Linq.Table<Friend> Friends
		{
			get
			{
				return this.GetTable<Friend>();
			}
		}
		
		public System.Data.Linq.Table<Shop> Shops
		{
			get
			{
				return this.GetTable<Shop>();
			}
		}
		
		public System.Data.Linq.Table<House> Houses
		{
			get
			{
				return this.GetTable<House>();
			}
		}
		
		public System.Data.Linq.Table<Land> Lands
		{
			get
			{
				return this.GetTable<Land>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleHire> RoleHires
		{
			get
			{
				return this.GetTable<RoleHire>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateRank")]
		public int UpdateRank()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRandUsers")]
		public ISingleResult<GetRandUsersResult> GetRandUsers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRank", DbType="Int")] System.Nullable<int> userRank)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, userRank);
			return ((ISingleResult<GetRandUsersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAvatar")]
		public int GetAvatar([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRank", DbType="Int")] System.Nullable<int> userRank)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, userRank);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionLog")]
	public partial class ActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogTime;
		
		private int _UserId;
		
		private int _RoleId;
		
		private int _ItemId;
		
		private int _Action;
		
		private System.Data.Linq.Binary _UserData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnActionChanging(int value);
    partial void OnActionChanged();
    partial void OnUserDataChanging(System.Data.Linq.Binary value);
    partial void OnUserDataChanged();
    #endregion
		
		public ActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="Int NOT NULL")]
		public int Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserData", DbType="VarBinary(64)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserData
		{
			get
			{
				return this._UserData;
			}
			set
			{
				if ((this._UserData != value))
				{
					this.OnUserDataChanging(value);
					this.SendPropertyChanging();
					this._UserData = value;
					this.SendPropertyChanged("UserData");
					this.OnUserDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PillageLog")]
	public partial class PillageLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogTime;
		
		private int _AttackId;
		
		private int _DefenceId;
		
		private int _Result;
		
		private int _SilverWon;
		
		private int _SilverLost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnAttackIdChanging(int value);
    partial void OnAttackIdChanged();
    partial void OnDefenceIdChanging(int value);
    partial void OnDefenceIdChanged();
    partial void OnResultChanging(int value);
    partial void OnResultChanged();
    partial void OnSilverWonChanging(int value);
    partial void OnSilverWonChanged();
    partial void OnSilverLostChanging(int value);
    partial void OnSilverLostChanged();
    #endregion
		
		public PillageLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackId", DbType="Int NOT NULL")]
		public int AttackId
		{
			get
			{
				return this._AttackId;
			}
			set
			{
				if ((this._AttackId != value))
				{
					this.OnAttackIdChanging(value);
					this.SendPropertyChanging();
					this._AttackId = value;
					this.SendPropertyChanged("AttackId");
					this.OnAttackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenceId", DbType="Int NOT NULL")]
		public int DefenceId
		{
			get
			{
				return this._DefenceId;
			}
			set
			{
				if ((this._DefenceId != value))
				{
					this.OnDefenceIdChanging(value);
					this.SendPropertyChanging();
					this._DefenceId = value;
					this.SendPropertyChanged("DefenceId");
					this.OnDefenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int NOT NULL")]
		public int Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SilverWon", DbType="Int NOT NULL")]
		public int SilverWon
		{
			get
			{
				return this._SilverWon;
			}
			set
			{
				if ((this._SilverWon != value))
				{
					this.OnSilverWonChanging(value);
					this.SendPropertyChanging();
					this._SilverWon = value;
					this.SendPropertyChanged("SilverWon");
					this.OnSilverWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SilverLost", DbType="Int NOT NULL")]
		public int SilverLost
		{
			get
			{
				return this._SilverLost;
			}
			set
			{
				if ((this._SilverLost != value))
				{
					this.OnSilverLostChanging(value);
					this.SendPropertyChanging();
					this._SilverLost = value;
					this.SendPropertyChanged("SilverLost");
					this.OnSilverLostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnemyCache")]
	public partial class EnemyCache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Data.Linq.Binary _EnemyList;
		
		private System.DateTime _LastUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnEnemyListChanging(System.Data.Linq.Binary value);
    partial void OnEnemyListChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public EnemyCache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnemyList", DbType="VarBinary(64)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EnemyList
		{
			get
			{
				return this._EnemyList;
			}
			set
			{
				if ((this._EnemyList != value))
				{
					this.OnEnemyListChanging(value);
					this.SendPropertyChanging();
					this._EnemyList = value;
					this.SendPropertyChanged("EnemyList");
					this.OnEnemyListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashLog")]
	public partial class CashLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogTime;
		
		private int _UserId;
		
		private int _GoldAdd;
		
		private int _SilverAdd;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private long _GoldTotal;
		
		private long _SilverTotal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnGoldAddChanging(int value);
    partial void OnGoldAddChanged();
    partial void OnSilverAddChanging(int value);
    partial void OnSilverAddChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnGoldTotalChanging(long value);
    partial void OnGoldTotalChanged();
    partial void OnSilverTotalChanging(long value);
    partial void OnSilverTotalChanged();
    #endregion
		
		public CashLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoldAdd", DbType="Int NOT NULL")]
		public int GoldAdd
		{
			get
			{
				return this._GoldAdd;
			}
			set
			{
				if ((this._GoldAdd != value))
				{
					this.OnGoldAddChanging(value);
					this.SendPropertyChanging();
					this._GoldAdd = value;
					this.SendPropertyChanged("GoldAdd");
					this.OnGoldAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SilverAdd", DbType="Int NOT NULL")]
		public int SilverAdd
		{
			get
			{
				return this._SilverAdd;
			}
			set
			{
				if ((this._SilverAdd != value))
				{
					this.OnSilverAddChanging(value);
					this.SendPropertyChanging();
					this._SilverAdd = value;
					this.SendPropertyChanged("SilverAdd");
					this.OnSilverAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoldTotal", DbType="BigInt NOT NULL")]
		public long GoldTotal
		{
			get
			{
				return this._GoldTotal;
			}
			set
			{
				if ((this._GoldTotal != value))
				{
					this.OnGoldTotalChanging(value);
					this.SendPropertyChanging();
					this._GoldTotal = value;
					this.SendPropertyChanged("GoldTotal");
					this.OnGoldTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SilverTotal", DbType="BigInt NOT NULL")]
		public long SilverTotal
		{
			get
			{
				return this._SilverTotal;
			}
			set
			{
				if ((this._SilverTotal != value))
				{
					this.OnSilverTotalChanging(value);
					this.SendPropertyChanging();
					this._SilverTotal = value;
					this.SendPropertyChanged("SilverTotal");
					this.OnSilverTotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArenaLog")]
	public partial class ArenaLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogTime;
		
		private int _UserId1;
		
		private int _UserId2;
		
		private int _Result;
		
		private int _Honor1;
		
		private int _Honor2;
		
		private int _TotalHonor1;
		
		private int _TotalHonor2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnUserId1Changing(int value);
    partial void OnUserId1Changed();
    partial void OnUserId2Changing(int value);
    partial void OnUserId2Changed();
    partial void OnResultChanging(int value);
    partial void OnResultChanged();
    partial void OnHonor1Changing(int value);
    partial void OnHonor1Changed();
    partial void OnHonor2Changing(int value);
    partial void OnHonor2Changed();
    partial void OnTotalHonor1Changing(int value);
    partial void OnTotalHonor1Changed();
    partial void OnTotalHonor2Changing(int value);
    partial void OnTotalHonor2Changed();
    #endregion
		
		public ArenaLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId1", DbType="Int NOT NULL")]
		public int UserId1
		{
			get
			{
				return this._UserId1;
			}
			set
			{
				if ((this._UserId1 != value))
				{
					this.OnUserId1Changing(value);
					this.SendPropertyChanging();
					this._UserId1 = value;
					this.SendPropertyChanged("UserId1");
					this.OnUserId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId2", DbType="Int NOT NULL")]
		public int UserId2
		{
			get
			{
				return this._UserId2;
			}
			set
			{
				if ((this._UserId2 != value))
				{
					this.OnUserId2Changing(value);
					this.SendPropertyChanging();
					this._UserId2 = value;
					this.SendPropertyChanged("UserId2");
					this.OnUserId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int NOT NULL")]
		public int Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Honor1", DbType="Int NOT NULL")]
		public int Honor1
		{
			get
			{
				return this._Honor1;
			}
			set
			{
				if ((this._Honor1 != value))
				{
					this.OnHonor1Changing(value);
					this.SendPropertyChanging();
					this._Honor1 = value;
					this.SendPropertyChanged("Honor1");
					this.OnHonor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Honor2", DbType="Int NOT NULL")]
		public int Honor2
		{
			get
			{
				return this._Honor2;
			}
			set
			{
				if ((this._Honor2 != value))
				{
					this.OnHonor2Changing(value);
					this.SendPropertyChanging();
					this._Honor2 = value;
					this.SendPropertyChanged("Honor2");
					this.OnHonor2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHonor1", DbType="Int NOT NULL")]
		public int TotalHonor1
		{
			get
			{
				return this._TotalHonor1;
			}
			set
			{
				if ((this._TotalHonor1 != value))
				{
					this.OnTotalHonor1Changing(value);
					this.SendPropertyChanging();
					this._TotalHonor1 = value;
					this.SendPropertyChanged("TotalHonor1");
					this.OnTotalHonor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHonor2", DbType="Int NOT NULL")]
		public int TotalHonor2
		{
			get
			{
				return this._TotalHonor2;
			}
			set
			{
				if ((this._TotalHonor2 != value))
				{
					this.OnTotalHonor2Changing(value);
					this.SendPropertyChanging();
					this._TotalHonor2 = value;
					this.SendPropertyChanged("TotalHonor2");
					this.OnTotalHonor2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleBase")]
	public partial class RoleBase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _Name;
		
		private string _Desc;
		
		private int _Type;
		
		private int _Class;
		
		private string _AssetPath;
		
		private int _Strength;
		
		private int _Agility;
		
		private int _Intelligent;
		
		private int _MoveSpeed;
		
		private int _AttackRate;
		
		private string _Skills;
		
		private string _Items;
		
		private EntitySet<RoleExtra> _RoleExtras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnClassChanging(int value);
    partial void OnClassChanged();
    partial void OnAssetPathChanging(string value);
    partial void OnAssetPathChanged();
    partial void OnStrengthChanging(int value);
    partial void OnStrengthChanged();
    partial void OnAgilityChanging(int value);
    partial void OnAgilityChanged();
    partial void OnIntelligentChanging(int value);
    partial void OnIntelligentChanged();
    partial void OnMoveSpeedChanging(int value);
    partial void OnMoveSpeedChanged();
    partial void OnAttackRateChanging(int value);
    partial void OnAttackRateChanged();
    partial void OnSkillsChanging(string value);
    partial void OnSkillsChanged();
    partial void OnItemsChanging(string value);
    partial void OnItemsChanged();
    #endregion
		
		public RoleBase()
		{
			this._RoleExtras = new EntitySet<RoleExtra>(new Action<RoleExtra>(this.attach_RoleExtras), new Action<RoleExtra>(this.detach_RoleExtras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="Int NOT NULL")]
		public int Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPath", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string AssetPath
		{
			get
			{
				return this._AssetPath;
			}
			set
			{
				if ((this._AssetPath != value))
				{
					this.OnAssetPathChanging(value);
					this.SendPropertyChanging();
					this._AssetPath = value;
					this.SendPropertyChanged("AssetPath");
					this.OnAssetPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="Int NOT NULL")]
		public int Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agility", DbType="Int NOT NULL")]
		public int Agility
		{
			get
			{
				return this._Agility;
			}
			set
			{
				if ((this._Agility != value))
				{
					this.OnAgilityChanging(value);
					this.SendPropertyChanging();
					this._Agility = value;
					this.SendPropertyChanged("Agility");
					this.OnAgilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intelligent", DbType="Int NOT NULL")]
		public int Intelligent
		{
			get
			{
				return this._Intelligent;
			}
			set
			{
				if ((this._Intelligent != value))
				{
					this.OnIntelligentChanging(value);
					this.SendPropertyChanging();
					this._Intelligent = value;
					this.SendPropertyChanged("Intelligent");
					this.OnIntelligentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveSpeed", DbType="Int NOT NULL")]
		public int MoveSpeed
		{
			get
			{
				return this._MoveSpeed;
			}
			set
			{
				if ((this._MoveSpeed != value))
				{
					this.OnMoveSpeedChanging(value);
					this.SendPropertyChanging();
					this._MoveSpeed = value;
					this.SendPropertyChanged("MoveSpeed");
					this.OnMoveSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackRate", DbType="Int NOT NULL")]
		public int AttackRate
		{
			get
			{
				return this._AttackRate;
			}
			set
			{
				if ((this._AttackRate != value))
				{
					this.OnAttackRateChanging(value);
					this.SendPropertyChanging();
					this._AttackRate = value;
					this.SendPropertyChanged("AttackRate");
					this.OnAttackRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skills", DbType="VarChar(64)")]
		public string Skills
		{
			get
			{
				return this._Skills;
			}
			set
			{
				if ((this._Skills != value))
				{
					this.OnSkillsChanging(value);
					this.SendPropertyChanging();
					this._Skills = value;
					this.SendPropertyChanged("Skills");
					this.OnSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items", DbType="VarChar(64)")]
		public string Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				if ((this._Items != value))
				{
					this.OnItemsChanging(value);
					this.SendPropertyChanging();
					this._Items = value;
					this.SendPropertyChanged("Items");
					this.OnItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleBase_RoleExtra", Storage="_RoleExtras", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<RoleExtra> RoleExtras
		{
			get
			{
				return this._RoleExtras;
			}
			set
			{
				this._RoleExtras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleExtras(RoleExtra entity)
		{
			this.SendPropertyChanging();
			entity.RoleBase = this;
		}
		
		private void detach_RoleExtras(RoleExtra entity)
		{
			this.SendPropertyChanging();
			entity.RoleBase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleExtra")]
	public partial class RoleExtra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private int _ElemId;
		
		private string _Skills;
		
		private EntityRef<RoleBase> _RoleBase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnElemIdChanging(int value);
    partial void OnElemIdChanged();
    partial void OnSkillsChanging(string value);
    partial void OnSkillsChanged();
    #endregion
		
		public RoleExtra()
		{
			this._RoleBase = default(EntityRef<RoleBase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._RoleBase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ElemId
		{
			get
			{
				return this._ElemId;
			}
			set
			{
				if ((this._ElemId != value))
				{
					this.OnElemIdChanging(value);
					this.SendPropertyChanging();
					this._ElemId = value;
					this.SendPropertyChanged("ElemId");
					this.OnElemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skills", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Skills
		{
			get
			{
				return this._Skills;
			}
			set
			{
				if ((this._Skills != value))
				{
					this.OnSkillsChanging(value);
					this.SendPropertyChanging();
					this._Skills = value;
					this.SendPropertyChanged("Skills");
					this.OnSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleBase_RoleExtra", Storage="_RoleBase", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public RoleBase RoleBase
		{
			get
			{
				return this._RoleBase.Entity;
			}
			set
			{
				RoleBase previousValue = this._RoleBase.Entity;
				if (((previousValue != value) 
							|| (this._RoleBase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleBase.Entity = null;
						previousValue.RoleExtras.Remove(this);
					}
					this._RoleBase.Entity = value;
					if ((value != null))
					{
						value.RoleExtras.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("RoleBase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SkillBase")]
	public partial class SkillBase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkillId;
		
		private string _Name;
		
		private string _Desc;
		
		private int _SkillType;
		
		private int _TargetType;
		
		private int _CostType;
		
		private int _CostValue;
		
		private float _CoolTime;
		
		private float _CastRange;
		
		private float _EffectRange;
		
		private int _EffectType;
		
		private int _EffectMask;
		
		private float _Duration;
		
		private int _SrcAtt01;
		
		private int _DstAtt01;
		
		private int _Value01;
		
		private int _SrcAtt02;
		
		private int _DstAtt02;
		
		private int _Value02;
		
		private int _SrcAtt03;
		
		private int _DstAtt03;
		
		private int _Value03;
		
		private int _SrcAtt04;
		
		private int _DstAtt04;
		
		private int _Value04;
		
		private int _SrcAtt05;
		
		private int _DstAtt05;
		
		private int _Value05;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkillIdChanging(int value);
    partial void OnSkillIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnSkillTypeChanging(int value);
    partial void OnSkillTypeChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnCostTypeChanging(int value);
    partial void OnCostTypeChanged();
    partial void OnCostValueChanging(int value);
    partial void OnCostValueChanged();
    partial void OnCoolTimeChanging(float value);
    partial void OnCoolTimeChanged();
    partial void OnCastRangeChanging(float value);
    partial void OnCastRangeChanged();
    partial void OnEffectRangeChanging(float value);
    partial void OnEffectRangeChanged();
    partial void OnEffectTypeChanging(int value);
    partial void OnEffectTypeChanged();
    partial void OnEffectMaskChanging(int value);
    partial void OnEffectMaskChanged();
    partial void OnDurationChanging(float value);
    partial void OnDurationChanged();
    partial void OnSrcAtt01Changing(int value);
    partial void OnSrcAtt01Changed();
    partial void OnDstAtt01Changing(int value);
    partial void OnDstAtt01Changed();
    partial void OnValue01Changing(int value);
    partial void OnValue01Changed();
    partial void OnSrcAtt02Changing(int value);
    partial void OnSrcAtt02Changed();
    partial void OnDstAtt02Changing(int value);
    partial void OnDstAtt02Changed();
    partial void OnValue02Changing(int value);
    partial void OnValue02Changed();
    partial void OnSrcAtt03Changing(int value);
    partial void OnSrcAtt03Changed();
    partial void OnDstAtt03Changing(int value);
    partial void OnDstAtt03Changed();
    partial void OnValue03Changing(int value);
    partial void OnValue03Changed();
    partial void OnSrcAtt04Changing(int value);
    partial void OnSrcAtt04Changed();
    partial void OnDstAtt04Changing(int value);
    partial void OnDstAtt04Changed();
    partial void OnValue04Changing(int value);
    partial void OnValue04Changed();
    partial void OnSrcAtt05Changing(int value);
    partial void OnSrcAtt05Changed();
    partial void OnDstAtt05Changing(int value);
    partial void OnDstAtt05Changed();
    partial void OnValue05Changing(int value);
    partial void OnValue05Changed();
    #endregion
		
		public SkillBase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SkillId
		{
			get
			{
				return this._SkillId;
			}
			set
			{
				if ((this._SkillId != value))
				{
					this.OnSkillIdChanging(value);
					this.SendPropertyChanging();
					this._SkillId = value;
					this.SendPropertyChanged("SkillId");
					this.OnSkillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillType", DbType="Int NOT NULL")]
		public int SkillType
		{
			get
			{
				return this._SkillType;
			}
			set
			{
				if ((this._SkillType != value))
				{
					this.OnSkillTypeChanging(value);
					this.SendPropertyChanging();
					this._SkillType = value;
					this.SendPropertyChanged("SkillType");
					this.OnSkillTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostType", DbType="Int NOT NULL")]
		public int CostType
		{
			get
			{
				return this._CostType;
			}
			set
			{
				if ((this._CostType != value))
				{
					this.OnCostTypeChanging(value);
					this.SendPropertyChanging();
					this._CostType = value;
					this.SendPropertyChanged("CostType");
					this.OnCostTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostValue", DbType="Int NOT NULL")]
		public int CostValue
		{
			get
			{
				return this._CostValue;
			}
			set
			{
				if ((this._CostValue != value))
				{
					this.OnCostValueChanging(value);
					this.SendPropertyChanging();
					this._CostValue = value;
					this.SendPropertyChanged("CostValue");
					this.OnCostValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoolTime", DbType="Real NOT NULL")]
		public float CoolTime
		{
			get
			{
				return this._CoolTime;
			}
			set
			{
				if ((this._CoolTime != value))
				{
					this.OnCoolTimeChanging(value);
					this.SendPropertyChanging();
					this._CoolTime = value;
					this.SendPropertyChanged("CoolTime");
					this.OnCoolTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CastRange", DbType="Real NOT NULL")]
		public float CastRange
		{
			get
			{
				return this._CastRange;
			}
			set
			{
				if ((this._CastRange != value))
				{
					this.OnCastRangeChanging(value);
					this.SendPropertyChanging();
					this._CastRange = value;
					this.SendPropertyChanged("CastRange");
					this.OnCastRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectRange", DbType="Real NOT NULL")]
		public float EffectRange
		{
			get
			{
				return this._EffectRange;
			}
			set
			{
				if ((this._EffectRange != value))
				{
					this.OnEffectRangeChanging(value);
					this.SendPropertyChanging();
					this._EffectRange = value;
					this.SendPropertyChanged("EffectRange");
					this.OnEffectRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectType", DbType="Int NOT NULL")]
		public int EffectType
		{
			get
			{
				return this._EffectType;
			}
			set
			{
				if ((this._EffectType != value))
				{
					this.OnEffectTypeChanging(value);
					this.SendPropertyChanging();
					this._EffectType = value;
					this.SendPropertyChanged("EffectType");
					this.OnEffectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMask", DbType="Int NOT NULL")]
		public int EffectMask
		{
			get
			{
				return this._EffectMask;
			}
			set
			{
				if ((this._EffectMask != value))
				{
					this.OnEffectMaskChanging(value);
					this.SendPropertyChanging();
					this._EffectMask = value;
					this.SendPropertyChanged("EffectMask");
					this.OnEffectMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Real NOT NULL")]
		public float Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcAtt01", DbType="Int NOT NULL")]
		public int SrcAtt01
		{
			get
			{
				return this._SrcAtt01;
			}
			set
			{
				if ((this._SrcAtt01 != value))
				{
					this.OnSrcAtt01Changing(value);
					this.SendPropertyChanging();
					this._SrcAtt01 = value;
					this.SendPropertyChanged("SrcAtt01");
					this.OnSrcAtt01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DstAtt01", DbType="Int NOT NULL")]
		public int DstAtt01
		{
			get
			{
				return this._DstAtt01;
			}
			set
			{
				if ((this._DstAtt01 != value))
				{
					this.OnDstAtt01Changing(value);
					this.SendPropertyChanging();
					this._DstAtt01 = value;
					this.SendPropertyChanged("DstAtt01");
					this.OnDstAtt01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value01", DbType="Int NOT NULL")]
		public int Value01
		{
			get
			{
				return this._Value01;
			}
			set
			{
				if ((this._Value01 != value))
				{
					this.OnValue01Changing(value);
					this.SendPropertyChanging();
					this._Value01 = value;
					this.SendPropertyChanged("Value01");
					this.OnValue01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcAtt02", DbType="Int NOT NULL")]
		public int SrcAtt02
		{
			get
			{
				return this._SrcAtt02;
			}
			set
			{
				if ((this._SrcAtt02 != value))
				{
					this.OnSrcAtt02Changing(value);
					this.SendPropertyChanging();
					this._SrcAtt02 = value;
					this.SendPropertyChanged("SrcAtt02");
					this.OnSrcAtt02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DstAtt02", DbType="Int NOT NULL")]
		public int DstAtt02
		{
			get
			{
				return this._DstAtt02;
			}
			set
			{
				if ((this._DstAtt02 != value))
				{
					this.OnDstAtt02Changing(value);
					this.SendPropertyChanging();
					this._DstAtt02 = value;
					this.SendPropertyChanged("DstAtt02");
					this.OnDstAtt02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value02", DbType="Int NOT NULL")]
		public int Value02
		{
			get
			{
				return this._Value02;
			}
			set
			{
				if ((this._Value02 != value))
				{
					this.OnValue02Changing(value);
					this.SendPropertyChanging();
					this._Value02 = value;
					this.SendPropertyChanged("Value02");
					this.OnValue02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcAtt03", DbType="Int NOT NULL")]
		public int SrcAtt03
		{
			get
			{
				return this._SrcAtt03;
			}
			set
			{
				if ((this._SrcAtt03 != value))
				{
					this.OnSrcAtt03Changing(value);
					this.SendPropertyChanging();
					this._SrcAtt03 = value;
					this.SendPropertyChanged("SrcAtt03");
					this.OnSrcAtt03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DstAtt03", DbType="Int NOT NULL")]
		public int DstAtt03
		{
			get
			{
				return this._DstAtt03;
			}
			set
			{
				if ((this._DstAtt03 != value))
				{
					this.OnDstAtt03Changing(value);
					this.SendPropertyChanging();
					this._DstAtt03 = value;
					this.SendPropertyChanged("DstAtt03");
					this.OnDstAtt03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value03", DbType="Int NOT NULL")]
		public int Value03
		{
			get
			{
				return this._Value03;
			}
			set
			{
				if ((this._Value03 != value))
				{
					this.OnValue03Changing(value);
					this.SendPropertyChanging();
					this._Value03 = value;
					this.SendPropertyChanged("Value03");
					this.OnValue03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcAtt04", DbType="Int NOT NULL")]
		public int SrcAtt04
		{
			get
			{
				return this._SrcAtt04;
			}
			set
			{
				if ((this._SrcAtt04 != value))
				{
					this.OnSrcAtt04Changing(value);
					this.SendPropertyChanging();
					this._SrcAtt04 = value;
					this.SendPropertyChanged("SrcAtt04");
					this.OnSrcAtt04Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DstAtt04", DbType="Int NOT NULL")]
		public int DstAtt04
		{
			get
			{
				return this._DstAtt04;
			}
			set
			{
				if ((this._DstAtt04 != value))
				{
					this.OnDstAtt04Changing(value);
					this.SendPropertyChanging();
					this._DstAtt04 = value;
					this.SendPropertyChanged("DstAtt04");
					this.OnDstAtt04Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value04", DbType="Int NOT NULL")]
		public int Value04
		{
			get
			{
				return this._Value04;
			}
			set
			{
				if ((this._Value04 != value))
				{
					this.OnValue04Changing(value);
					this.SendPropertyChanging();
					this._Value04 = value;
					this.SendPropertyChanged("Value04");
					this.OnValue04Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcAtt05", DbType="Int NOT NULL")]
		public int SrcAtt05
		{
			get
			{
				return this._SrcAtt05;
			}
			set
			{
				if ((this._SrcAtt05 != value))
				{
					this.OnSrcAtt05Changing(value);
					this.SendPropertyChanging();
					this._SrcAtt05 = value;
					this.SendPropertyChanged("SrcAtt05");
					this.OnSrcAtt05Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DstAtt05", DbType="Int NOT NULL")]
		public int DstAtt05
		{
			get
			{
				return this._DstAtt05;
			}
			set
			{
				if ((this._DstAtt05 != value))
				{
					this.OnDstAtt05Changing(value);
					this.SendPropertyChanging();
					this._DstAtt05 = value;
					this.SendPropertyChanged("DstAtt05");
					this.OnDstAtt05Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value05", DbType="Int NOT NULL")]
		public int Value05
		{
			get
			{
				return this._Value05;
			}
			set
			{
				if ((this._Value05 != value))
				{
					this.OnValue05Changing(value);
					this.SendPropertyChanging();
					this._Value05 = value;
					this.SendPropertyChanged("Value05");
					this.OnValue05Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemBase")]
	public partial class ItemBase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private string _Name;
		
		private string _Desc;
		
		private int _Kind;
		
		private int _SubKind;
		
		private int _Level;
		
		private int _Stack;
		
		private float _Attrib01;
		
		private float _Step01;
		
		private float _MinVal01;
		
		private float _MaxVal01;
		
		private float _Attrib02;
		
		private float _Step02;
		
		private float _MinVal02;
		
		private float _MaxVal02;
		
		private int _SellPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnKindChanging(int value);
    partial void OnKindChanged();
    partial void OnSubKindChanging(int value);
    partial void OnSubKindChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnStackChanging(int value);
    partial void OnStackChanged();
    partial void OnAttrib01Changing(float value);
    partial void OnAttrib01Changed();
    partial void OnStep01Changing(float value);
    partial void OnStep01Changed();
    partial void OnMinVal01Changing(float value);
    partial void OnMinVal01Changed();
    partial void OnMaxVal01Changing(float value);
    partial void OnMaxVal01Changed();
    partial void OnAttrib02Changing(float value);
    partial void OnAttrib02Changed();
    partial void OnStep02Changing(float value);
    partial void OnStep02Changed();
    partial void OnMinVal02Changing(float value);
    partial void OnMinVal02Changed();
    partial void OnMaxVal02Changing(float value);
    partial void OnMaxVal02Changed();
    partial void OnSellPriceChanging(int value);
    partial void OnSellPriceChanged();
    #endregion
		
		public ItemBase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="Int NOT NULL")]
		public int Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubKind", DbType="Int NOT NULL")]
		public int SubKind
		{
			get
			{
				return this._SubKind;
			}
			set
			{
				if ((this._SubKind != value))
				{
					this.OnSubKindChanging(value);
					this.SendPropertyChanging();
					this._SubKind = value;
					this.SendPropertyChanged("SubKind");
					this.OnSubKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stack", DbType="Int NOT NULL")]
		public int Stack
		{
			get
			{
				return this._Stack;
			}
			set
			{
				if ((this._Stack != value))
				{
					this.OnStackChanging(value);
					this.SendPropertyChanging();
					this._Stack = value;
					this.SendPropertyChanged("Stack");
					this.OnStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attrib01", DbType="Real NOT NULL")]
		public float Attrib01
		{
			get
			{
				return this._Attrib01;
			}
			set
			{
				if ((this._Attrib01 != value))
				{
					this.OnAttrib01Changing(value);
					this.SendPropertyChanging();
					this._Attrib01 = value;
					this.SendPropertyChanged("Attrib01");
					this.OnAttrib01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step01", DbType="Real NOT NULL")]
		public float Step01
		{
			get
			{
				return this._Step01;
			}
			set
			{
				if ((this._Step01 != value))
				{
					this.OnStep01Changing(value);
					this.SendPropertyChanging();
					this._Step01 = value;
					this.SendPropertyChanged("Step01");
					this.OnStep01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinVal01", DbType="Real NOT NULL")]
		public float MinVal01
		{
			get
			{
				return this._MinVal01;
			}
			set
			{
				if ((this._MinVal01 != value))
				{
					this.OnMinVal01Changing(value);
					this.SendPropertyChanging();
					this._MinVal01 = value;
					this.SendPropertyChanged("MinVal01");
					this.OnMinVal01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxVal01", DbType="Real NOT NULL")]
		public float MaxVal01
		{
			get
			{
				return this._MaxVal01;
			}
			set
			{
				if ((this._MaxVal01 != value))
				{
					this.OnMaxVal01Changing(value);
					this.SendPropertyChanging();
					this._MaxVal01 = value;
					this.SendPropertyChanged("MaxVal01");
					this.OnMaxVal01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attrib02", DbType="Real NOT NULL")]
		public float Attrib02
		{
			get
			{
				return this._Attrib02;
			}
			set
			{
				if ((this._Attrib02 != value))
				{
					this.OnAttrib02Changing(value);
					this.SendPropertyChanging();
					this._Attrib02 = value;
					this.SendPropertyChanged("Attrib02");
					this.OnAttrib02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step02", DbType="Real NOT NULL")]
		public float Step02
		{
			get
			{
				return this._Step02;
			}
			set
			{
				if ((this._Step02 != value))
				{
					this.OnStep02Changing(value);
					this.SendPropertyChanging();
					this._Step02 = value;
					this.SendPropertyChanged("Step02");
					this.OnStep02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinVal02", DbType="Real NOT NULL")]
		public float MinVal02
		{
			get
			{
				return this._MinVal02;
			}
			set
			{
				if ((this._MinVal02 != value))
				{
					this.OnMinVal02Changing(value);
					this.SendPropertyChanging();
					this._MinVal02 = value;
					this.SendPropertyChanged("MinVal02");
					this.OnMinVal02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxVal02", DbType="Real NOT NULL")]
		public float MaxVal02
		{
			get
			{
				return this._MaxVal02;
			}
			set
			{
				if ((this._MaxVal02 != value))
				{
					this.OnMaxVal02Changing(value);
					this.SendPropertyChanging();
					this._MaxVal02 = value;
					this.SendPropertyChanged("MaxVal02");
					this.OnMaxVal02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellPrice", DbType="Int NOT NULL")]
		public int SellPrice
		{
			get
			{
				return this._SellPrice;
			}
			set
			{
				if ((this._SellPrice != value))
				{
					this.OnSellPriceChanging(value);
					this.SendPropertyChanging();
					this._SellPrice = value;
					this.SendPropertyChanged("SellPrice");
					this.OnSellPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_UID;
		
		private int _Role_UID;
		
		private int _UserId;
		
		private int _ItemId;
		
		private int _Grade;
		
		private int _Rank0;
		
		private int _Rank1;
		
		private int _Rank2;
		
		private int _Rank3;
		
		private int _Rank4;
		
		private int _Count;
		
		private int _Store;
		
		private int _Position;
		
		private System.Data.Linq.Binary _Attribs;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private EntityRef<UserEx> _UserEx;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_UIDChanging(int value);
    partial void OnItem_UIDChanged();
    partial void OnRole_UIDChanging(int value);
    partial void OnRole_UIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnGradeChanging(int value);
    partial void OnGradeChanged();
    partial void OnRank0Changing(int value);
    partial void OnRank0Changed();
    partial void OnRank1Changing(int value);
    partial void OnRank1Changed();
    partial void OnRank2Changing(int value);
    partial void OnRank2Changed();
    partial void OnRank3Changing(int value);
    partial void OnRank3Changed();
    partial void OnRank4Changing(int value);
    partial void OnRank4Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnStoreChanging(int value);
    partial void OnStoreChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnAttribsChanging(System.Data.Linq.Binary value);
    partial void OnAttribsChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Item()
		{
			this._UserEx = default(EntityRef<UserEx>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_UID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_UID
		{
			get
			{
				return this._Item_UID;
			}
			set
			{
				if ((this._Item_UID != value))
				{
					this.OnItem_UIDChanging(value);
					this.SendPropertyChanging();
					this._Item_UID = value;
					this.SendPropertyChanged("Item_UID");
					this.OnItem_UIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_UID", DbType="Int NOT NULL")]
		public int Role_UID
		{
			get
			{
				return this._Role_UID;
			}
			set
			{
				if ((this._Role_UID != value))
				{
					this.OnRole_UIDChanging(value);
					this.SendPropertyChanging();
					this._Role_UID = value;
					this.SendPropertyChanged("Role_UID");
					this.OnRole_UIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserEx.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int NOT NULL")]
		public int Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank0", DbType="Int NOT NULL")]
		public int Rank0
		{
			get
			{
				return this._Rank0;
			}
			set
			{
				if ((this._Rank0 != value))
				{
					this.OnRank0Changing(value);
					this.SendPropertyChanging();
					this._Rank0 = value;
					this.SendPropertyChanged("Rank0");
					this.OnRank0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank1", DbType="Int NOT NULL")]
		public int Rank1
		{
			get
			{
				return this._Rank1;
			}
			set
			{
				if ((this._Rank1 != value))
				{
					this.OnRank1Changing(value);
					this.SendPropertyChanging();
					this._Rank1 = value;
					this.SendPropertyChanged("Rank1");
					this.OnRank1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank2", DbType="Int NOT NULL")]
		public int Rank2
		{
			get
			{
				return this._Rank2;
			}
			set
			{
				if ((this._Rank2 != value))
				{
					this.OnRank2Changing(value);
					this.SendPropertyChanging();
					this._Rank2 = value;
					this.SendPropertyChanged("Rank2");
					this.OnRank2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank3", DbType="Int NOT NULL")]
		public int Rank3
		{
			get
			{
				return this._Rank3;
			}
			set
			{
				if ((this._Rank3 != value))
				{
					this.OnRank3Changing(value);
					this.SendPropertyChanging();
					this._Rank3 = value;
					this.SendPropertyChanged("Rank3");
					this.OnRank3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank4", DbType="Int NOT NULL")]
		public int Rank4
		{
			get
			{
				return this._Rank4;
			}
			set
			{
				if ((this._Rank4 != value))
				{
					this.OnRank4Changing(value);
					this.SendPropertyChanging();
					this._Rank4 = value;
					this.SendPropertyChanged("Rank4");
					this.OnRank4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store", DbType="Int NOT NULL")]
		public int Store
		{
			get
			{
				return this._Store;
			}
			set
			{
				if ((this._Store != value))
				{
					this.OnStoreChanging(value);
					this.SendPropertyChanging();
					this._Store = value;
					this.SendPropertyChanged("Store");
					this.OnStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribs", DbType="VarBinary(128)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attribs
		{
			get
			{
				return this._Attribs;
			}
			set
			{
				if ((this._Attribs != value))
				{
					this.OnAttribsChanging(value);
					this.SendPropertyChanging();
					this._Attribs = value;
					this.SendPropertyChanged("Attribs");
					this.OnAttribsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_Item", Storage="_UserEx", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserEx UserEx
		{
			get
			{
				return this._UserEx.Entity;
			}
			set
			{
				UserEx previousValue = this._UserEx.Entity;
				if (((previousValue != value) 
							|| (this._UserEx.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEx.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._UserEx.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserEx");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountLog")]
	public partial class AccountLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogTime;
		
		private int _UserId;
		
		private string _RemoteIP;
		
		private int _Action;
		
		private int _OnlineTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRemoteIPChanging(string value);
    partial void OnRemoteIPChanged();
    partial void OnActionChanging(int value);
    partial void OnActionChanged();
    partial void OnOnlineTimeChanging(int value);
    partial void OnOnlineTimeChanged();
    #endregion
		
		public AccountLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteIP", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string RemoteIP
		{
			get
			{
				return this._RemoteIP;
			}
			set
			{
				if ((this._RemoteIP != value))
				{
					this.OnRemoteIPChanging(value);
					this.SendPropertyChanging();
					this._RemoteIP = value;
					this.SendPropertyChanged("RemoteIP");
					this.OnRemoteIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="Int NOT NULL")]
		public int Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineTime", DbType="Int NOT NULL")]
		public int OnlineTime
		{
			get
			{
				return this._OnlineTime;
			}
			set
			{
				if ((this._OnlineTime != value))
				{
					this.OnOnlineTimeChanging(value);
					this.SendPropertyChanging();
					this._OnlineTime = value;
					this.SendPropertyChanged("OnlineTime");
					this.OnOnlineTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiftBox")]
	public partial class GiftBox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GiftId;
		
		private int _GiftType;
		
		private int _Count;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _SetTime;
		
		private System.Nullable<System.DateTime> _ExpTime;
		
		private System.Nullable<System.DateTime> _GetTime;
		
		private int _Silver;
		
		private int _Gold;
		
		private int _Exp;
		
		private int _Honor;
		
		private System.Data.Linq.Binary _ItemData;
		
		private System.Data.Linq.Binary _RoleData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGiftIdChanging(int value);
    partial void OnGiftIdChanged();
    partial void OnGiftTypeChanging(int value);
    partial void OnGiftTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSetTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSetTimeChanged();
    partial void OnExpTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpTimeChanged();
    partial void OnGetTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnGetTimeChanged();
    partial void OnSilverChanging(int value);
    partial void OnSilverChanged();
    partial void OnGoldChanging(int value);
    partial void OnGoldChanged();
    partial void OnExpChanging(int value);
    partial void OnExpChanged();
    partial void OnHonorChanging(int value);
    partial void OnHonorChanged();
    partial void OnItemDataChanging(System.Data.Linq.Binary value);
    partial void OnItemDataChanged();
    partial void OnRoleDataChanging(System.Data.Linq.Binary value);
    partial void OnRoleDataChanged();
    #endregion
		
		public GiftBox()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GiftId
		{
			get
			{
				return this._GiftId;
			}
			set
			{
				if ((this._GiftId != value))
				{
					this.OnGiftIdChanging(value);
					this.SendPropertyChanging();
					this._GiftId = value;
					this.SendPropertyChanged("GiftId");
					this.OnGiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftType", DbType="Int NOT NULL")]
		public int GiftType
		{
			get
			{
				return this._GiftType;
			}
			set
			{
				if ((this._GiftType != value))
				{
					this.OnGiftTypeChanging(value);
					this.SendPropertyChanging();
					this._GiftType = value;
					this.SendPropertyChanged("GiftType");
					this.OnGiftTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SetTime
		{
			get
			{
				return this._SetTime;
			}
			set
			{
				if ((this._SetTime != value))
				{
					this.OnSetTimeChanging(value);
					this.SendPropertyChanging();
					this._SetTime = value;
					this.SendPropertyChanged("SetTime");
					this.OnSetTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpTime
		{
			get
			{
				return this._ExpTime;
			}
			set
			{
				if ((this._ExpTime != value))
				{
					this.OnExpTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpTime = value;
					this.SendPropertyChanged("ExpTime");
					this.OnExpTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> GetTime
		{
			get
			{
				return this._GetTime;
			}
			set
			{
				if ((this._GetTime != value))
				{
					this.OnGetTimeChanging(value);
					this.SendPropertyChanging();
					this._GetTime = value;
					this.SendPropertyChanged("GetTime");
					this.OnGetTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Silver", DbType="Int NOT NULL")]
		public int Silver
		{
			get
			{
				return this._Silver;
			}
			set
			{
				if ((this._Silver != value))
				{
					this.OnSilverChanging(value);
					this.SendPropertyChanging();
					this._Silver = value;
					this.SendPropertyChanged("Silver");
					this.OnSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gold", DbType="Int NOT NULL")]
		public int Gold
		{
			get
			{
				return this._Gold;
			}
			set
			{
				if ((this._Gold != value))
				{
					this.OnGoldChanging(value);
					this.SendPropertyChanging();
					this._Gold = value;
					this.SendPropertyChanged("Gold");
					this.OnGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exp", DbType="Int NOT NULL")]
		public int Exp
		{
			get
			{
				return this._Exp;
			}
			set
			{
				if ((this._Exp != value))
				{
					this.OnExpChanging(value);
					this.SendPropertyChanging();
					this._Exp = value;
					this.SendPropertyChanged("Exp");
					this.OnExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Honor", DbType="Int NOT NULL")]
		public int Honor
		{
			get
			{
				return this._Honor;
			}
			set
			{
				if ((this._Honor != value))
				{
					this.OnHonorChanging(value);
					this.SendPropertyChanging();
					this._Honor = value;
					this.SendPropertyChanged("Honor");
					this.OnHonorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemData", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ItemData
		{
			get
			{
				return this._ItemData;
			}
			set
			{
				if ((this._ItemData != value))
				{
					this.OnItemDataChanging(value);
					this.SendPropertyChanging();
					this._ItemData = value;
					this.SendPropertyChanged("ItemData");
					this.OnItemDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleData", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RoleData
		{
			get
			{
				return this._RoleData;
			}
			set
			{
				if ((this._RoleData != value))
				{
					this.OnRoleDataChanging(value);
					this.SendPropertyChanging();
					this._RoleData = value;
					this.SendPropertyChanged("RoleData");
					this.OnRoleDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserEx")]
	public partial class UserEx : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _NickName;
		
		private int _Avatar;
		
		private long _Silver;
		
		private long _Gold;
		
		private int _Level;
		
		private int _Exp;
		
		private int _LevelRank;
		
		private int _MissionLevel;
		
		private int _Honor;
		
		private int _HonorRank;
		
		private int _TotalWon;
		
		private int _TotalDraw;
		
		private int _TotalLost;
		
		private int _TutorStep;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _LoginTime;
		
		private System.Nullable<System.DateTime> _LogoutTime;
		
		private int _OnlineAwardStep;
		
		private int _OnlineAwardTime;
		
		private int _Status;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Land> _Lands;
		
		private EntitySet<Role> _Roles;
		
		private EntitySet<RoleHire> _RoleHires;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnAvatarChanging(int value);
    partial void OnAvatarChanged();
    partial void OnSilverChanging(long value);
    partial void OnSilverChanged();
    partial void OnGoldChanging(long value);
    partial void OnGoldChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnExpChanging(int value);
    partial void OnExpChanged();
    partial void OnLevelRankChanging(int value);
    partial void OnLevelRankChanged();
    partial void OnMissionLevelChanging(int value);
    partial void OnMissionLevelChanged();
    partial void OnHonorChanging(int value);
    partial void OnHonorChanged();
    partial void OnHonorRankChanging(int value);
    partial void OnHonorRankChanged();
    partial void OnTotalWonChanging(int value);
    partial void OnTotalWonChanged();
    partial void OnTotalDrawChanging(int value);
    partial void OnTotalDrawChanged();
    partial void OnTotalLostChanging(int value);
    partial void OnTotalLostChanged();
    partial void OnTutorStepChanging(int value);
    partial void OnTutorStepChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnLoginTimeChanging(System.DateTime value);
    partial void OnLoginTimeChanged();
    partial void OnLogoutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLogoutTimeChanged();
    partial void OnOnlineAwardStepChanging(int value);
    partial void OnOnlineAwardStepChanged();
    partial void OnOnlineAwardTimeChanging(int value);
    partial void OnOnlineAwardTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public UserEx()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Lands = default(EntityRef<Land>);
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._RoleHires = new EntitySet<RoleHire>(new Action<RoleHire>(this.attach_RoleHires), new Action<RoleHire>(this.detach_RoleHires));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="Int NOT NULL")]
		public int Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Silver", DbType="BigInt NOT NULL")]
		public long Silver
		{
			get
			{
				return this._Silver;
			}
			set
			{
				if ((this._Silver != value))
				{
					this.OnSilverChanging(value);
					this.SendPropertyChanging();
					this._Silver = value;
					this.SendPropertyChanged("Silver");
					this.OnSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gold", DbType="BigInt NOT NULL")]
		public long Gold
		{
			get
			{
				return this._Gold;
			}
			set
			{
				if ((this._Gold != value))
				{
					this.OnGoldChanging(value);
					this.SendPropertyChanging();
					this._Gold = value;
					this.SendPropertyChanged("Gold");
					this.OnGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exp", DbType="Int NOT NULL")]
		public int Exp
		{
			get
			{
				return this._Exp;
			}
			set
			{
				if ((this._Exp != value))
				{
					this.OnExpChanging(value);
					this.SendPropertyChanging();
					this._Exp = value;
					this.SendPropertyChanged("Exp");
					this.OnExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelRank", DbType="Int NOT NULL")]
		public int LevelRank
		{
			get
			{
				return this._LevelRank;
			}
			set
			{
				if ((this._LevelRank != value))
				{
					this.OnLevelRankChanging(value);
					this.SendPropertyChanging();
					this._LevelRank = value;
					this.SendPropertyChanged("LevelRank");
					this.OnLevelRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionLevel", DbType="Int NOT NULL")]
		public int MissionLevel
		{
			get
			{
				return this._MissionLevel;
			}
			set
			{
				if ((this._MissionLevel != value))
				{
					this.OnMissionLevelChanging(value);
					this.SendPropertyChanging();
					this._MissionLevel = value;
					this.SendPropertyChanged("MissionLevel");
					this.OnMissionLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Honor", DbType="Int NOT NULL")]
		public int Honor
		{
			get
			{
				return this._Honor;
			}
			set
			{
				if ((this._Honor != value))
				{
					this.OnHonorChanging(value);
					this.SendPropertyChanging();
					this._Honor = value;
					this.SendPropertyChanged("Honor");
					this.OnHonorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HonorRank", DbType="Int NOT NULL")]
		public int HonorRank
		{
			get
			{
				return this._HonorRank;
			}
			set
			{
				if ((this._HonorRank != value))
				{
					this.OnHonorRankChanging(value);
					this.SendPropertyChanging();
					this._HonorRank = value;
					this.SendPropertyChanged("HonorRank");
					this.OnHonorRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWon", DbType="Int NOT NULL")]
		public int TotalWon
		{
			get
			{
				return this._TotalWon;
			}
			set
			{
				if ((this._TotalWon != value))
				{
					this.OnTotalWonChanging(value);
					this.SendPropertyChanging();
					this._TotalWon = value;
					this.SendPropertyChanged("TotalWon");
					this.OnTotalWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDraw", DbType="Int NOT NULL")]
		public int TotalDraw
		{
			get
			{
				return this._TotalDraw;
			}
			set
			{
				if ((this._TotalDraw != value))
				{
					this.OnTotalDrawChanging(value);
					this.SendPropertyChanging();
					this._TotalDraw = value;
					this.SendPropertyChanged("TotalDraw");
					this.OnTotalDrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLost", DbType="Int NOT NULL")]
		public int TotalLost
		{
			get
			{
				return this._TotalLost;
			}
			set
			{
				if ((this._TotalLost != value))
				{
					this.OnTotalLostChanging(value);
					this.SendPropertyChanging();
					this._TotalLost = value;
					this.SendPropertyChanged("TotalLost");
					this.OnTotalLostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutorStep", DbType="Int NOT NULL")]
		public int TutorStep
		{
			get
			{
				return this._TutorStep;
			}
			set
			{
				if ((this._TutorStep != value))
				{
					this.OnTutorStepChanging(value);
					this.SendPropertyChanging();
					this._TutorStep = value;
					this.SendPropertyChanged("TutorStep");
					this.OnTutorStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="DateTime NOT NULL")]
		public System.DateTime LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogoutTime
		{
			get
			{
				return this._LogoutTime;
			}
			set
			{
				if ((this._LogoutTime != value))
				{
					this.OnLogoutTimeChanging(value);
					this.SendPropertyChanging();
					this._LogoutTime = value;
					this.SendPropertyChanged("LogoutTime");
					this.OnLogoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineAwardStep", DbType="Int NOT NULL")]
		public int OnlineAwardStep
		{
			get
			{
				return this._OnlineAwardStep;
			}
			set
			{
				if ((this._OnlineAwardStep != value))
				{
					this.OnOnlineAwardStepChanging(value);
					this.SendPropertyChanging();
					this._OnlineAwardStep = value;
					this.SendPropertyChanged("OnlineAwardStep");
					this.OnOnlineAwardStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineAwardTime", DbType="Int NOT NULL")]
		public int OnlineAwardTime
		{
			get
			{
				return this._OnlineAwardTime;
			}
			set
			{
				if ((this._OnlineAwardTime != value))
				{
					this.OnOnlineAwardTimeChanging(value);
					this.SendPropertyChanging();
					this._OnlineAwardTime = value;
					this.SendPropertyChanged("OnlineAwardTime");
					this.OnOnlineAwardTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_Item", Storage="_Items", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_Land", Storage="_Lands", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Land Land
		{
			get
			{
				return this._Lands.Entity;
			}
			set
			{
				Land previousValue = this._Lands.Entity;
				if (((previousValue != value) 
							|| (this._Lands.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lands.Entity = null;
						previousValue.UserEx = null;
					}
					this._Lands.Entity = value;
					if ((value != null))
					{
						value.UserEx = this;
					}
					this.SendPropertyChanged("Land");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_Role", Storage="_Roles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_RoleHire", Storage="_RoleHires", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<RoleHire> RoleHires
		{
			get
			{
				return this._RoleHires;
			}
			set
			{
				this._RoleHires.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.UserEx = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.UserEx = null;
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.UserEx = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.UserEx = null;
		}
		
		private void attach_RoleHires(RoleHire entity)
		{
			this.SendPropertyChanging();
			entity.UserEx = this;
		}
		
		private void detach_RoleHires(RoleHire entity)
		{
			this.SendPropertyChanging();
			entity.UserEx = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailBox")]
	public partial class MailBox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MailId;
		
		private int _SenderId;
		
		private int _ReceverId;
		
		private string _Title;
		
		private string _Message;
		
		private int _Silver;
		
		private int _Gold;
		
		private System.Data.Linq.Binary _AttachItems;
		
		private System.Nullable<System.DateTime> _SendTime;
		
		private System.Nullable<System.DateTime> _RecvTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailIdChanging(int value);
    partial void OnMailIdChanged();
    partial void OnSenderIdChanging(int value);
    partial void OnSenderIdChanged();
    partial void OnReceverIdChanging(int value);
    partial void OnReceverIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnSilverChanging(int value);
    partial void OnSilverChanged();
    partial void OnGoldChanging(int value);
    partial void OnGoldChanged();
    partial void OnAttachItemsChanging(System.Data.Linq.Binary value);
    partial void OnAttachItemsChanged();
    partial void OnSendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSendTimeChanged();
    partial void OnRecvTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRecvTimeChanged();
    #endregion
		
		public MailBox()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MailId
		{
			get
			{
				return this._MailId;
			}
			set
			{
				if ((this._MailId != value))
				{
					this.OnMailIdChanging(value);
					this.SendPropertyChanging();
					this._MailId = value;
					this.SendPropertyChanged("MailId");
					this.OnMailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderId", DbType="Int NOT NULL")]
		public int SenderId
		{
			get
			{
				return this._SenderId;
			}
			set
			{
				if ((this._SenderId != value))
				{
					this.OnSenderIdChanging(value);
					this.SendPropertyChanging();
					this._SenderId = value;
					this.SendPropertyChanged("SenderId");
					this.OnSenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceverId", DbType="Int NOT NULL")]
		public int ReceverId
		{
			get
			{
				return this._ReceverId;
			}
			set
			{
				if ((this._ReceverId != value))
				{
					this.OnReceverIdChanging(value);
					this.SendPropertyChanging();
					this._ReceverId = value;
					this.SendPropertyChanged("ReceverId");
					this.OnReceverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Silver", DbType="Int NOT NULL")]
		public int Silver
		{
			get
			{
				return this._Silver;
			}
			set
			{
				if ((this._Silver != value))
				{
					this.OnSilverChanging(value);
					this.SendPropertyChanging();
					this._Silver = value;
					this.SendPropertyChanged("Silver");
					this.OnSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gold", DbType="Int NOT NULL")]
		public int Gold
		{
			get
			{
				return this._Gold;
			}
			set
			{
				if ((this._Gold != value))
				{
					this.OnGoldChanging(value);
					this.SendPropertyChanging();
					this._Gold = value;
					this.SendPropertyChanged("Gold");
					this.OnGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachItems", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AttachItems
		{
			get
			{
				return this._AttachItems;
			}
			set
			{
				if ((this._AttachItems != value))
				{
					this.OnAttachItemsChanging(value);
					this.SendPropertyChanging();
					this._AttachItems = value;
					this.SendPropertyChanged("AttachItems");
					this.OnAttachItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendTime
		{
			get
			{
				return this._SendTime;
			}
			set
			{
				if ((this._SendTime != value))
				{
					this.OnSendTimeChanging(value);
					this.SendPropertyChanging();
					this._SendTime = value;
					this.SendPropertyChanged("SendTime");
					this.OnSendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecvTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecvTime
		{
			get
			{
				return this._RecvTime;
			}
			set
			{
				if ((this._RecvTime != value))
				{
					this.OnRecvTimeChanging(value);
					this.SendPropertyChanging();
					this._RecvTime = value;
					this.SendPropertyChanged("RecvTime");
					this.OnRecvTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnlineLog")]
	public partial class OnlineLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogTime;
		
		private int _TotalCCU;
		
		private System.Data.Linq.Binary _ZonesCCU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnTotalCCUChanging(int value);
    partial void OnTotalCCUChanged();
    partial void OnZonesCCUChanging(System.Data.Linq.Binary value);
    partial void OnZonesCCUChanged();
    #endregion
		
		public OnlineLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCCU", DbType="Int NOT NULL")]
		public int TotalCCU
		{
			get
			{
				return this._TotalCCU;
			}
			set
			{
				if ((this._TotalCCU != value))
				{
					this.OnTotalCCUChanging(value);
					this.SendPropertyChanging();
					this._TotalCCU = value;
					this.SendPropertyChanged("TotalCCU");
					this.OnTotalCCUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZonesCCU", DbType="VarBinary(32)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ZonesCCU
		{
			get
			{
				return this._ZonesCCU;
			}
			set
			{
				if ((this._ZonesCCU != value))
				{
					this.OnZonesCCUChanging(value);
					this.SendPropertyChanging();
					this._ZonesCCU = value;
					this.SendPropertyChanged("ZonesCCU");
					this.OnZonesCCUChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Friend")]
	public partial class Friend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _User01Id;
		
		private int _User02Id;
		
		private int _Mode;
		
		private System.Nullable<System.DateTime> _ExpiryTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUser01IdChanging(int value);
    partial void OnUser01IdChanged();
    partial void OnUser02IdChanging(int value);
    partial void OnUser02IdChanged();
    partial void OnModeChanging(int value);
    partial void OnModeChanged();
    partial void OnExpiryTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryTimeChanged();
    #endregion
		
		public Friend()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User01Id", DbType="Int NOT NULL")]
		public int User01Id
		{
			get
			{
				return this._User01Id;
			}
			set
			{
				if ((this._User01Id != value))
				{
					this.OnUser01IdChanging(value);
					this.SendPropertyChanging();
					this._User01Id = value;
					this.SendPropertyChanged("User01Id");
					this.OnUser01IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User02Id", DbType="Int NOT NULL")]
		public int User02Id
		{
			get
			{
				return this._User02Id;
			}
			set
			{
				if ((this._User02Id != value))
				{
					this.OnUser02IdChanging(value);
					this.SendPropertyChanging();
					this._User02Id = value;
					this.SendPropertyChanged("User02Id");
					this.OnUser02IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int NOT NULL")]
		public int Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryTime
		{
			get
			{
				return this._ExpiryTime;
			}
			set
			{
				if ((this._ExpiryTime != value))
				{
					this.OnExpiryTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpiryTime = value;
					this.SendPropertyChanged("ExpiryTime");
					this.OnExpiryTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop")]
	public partial class Shop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopId;
		
		private string _ItemName;
		
		private int _ItemKind;
		
		private int _ItemId;
		
		private int _UserLevel;
		
		private int _Promotion;
		
		private int _PriceSilver;
		
		private int _PriceGold;
		
		private float _PriceUSD;
		
		private float _PriceVND;
		
		private int _Discount;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private int _TotalStock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemKindChanging(int value);
    partial void OnItemKindChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUserLevelChanging(int value);
    partial void OnUserLevelChanged();
    partial void OnPromotionChanging(int value);
    partial void OnPromotionChanged();
    partial void OnPriceSilverChanging(int value);
    partial void OnPriceSilverChanged();
    partial void OnPriceGoldChanging(int value);
    partial void OnPriceGoldChanged();
    partial void OnPriceUSDChanging(float value);
    partial void OnPriceUSDChanged();
    partial void OnPriceVNDChanging(float value);
    partial void OnPriceVNDChanged();
    partial void OnDiscountChanging(int value);
    partial void OnDiscountChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnTotalStockChanging(int value);
    partial void OnTotalStockChanged();
    #endregion
		
		public Shop()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKind", DbType="Int NOT NULL")]
		public int ItemKind
		{
			get
			{
				return this._ItemKind;
			}
			set
			{
				if ((this._ItemKind != value))
				{
					this.OnItemKindChanging(value);
					this.SendPropertyChanging();
					this._ItemKind = value;
					this.SendPropertyChanged("ItemKind");
					this.OnItemKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLevel", DbType="Int NOT NULL")]
		public int UserLevel
		{
			get
			{
				return this._UserLevel;
			}
			set
			{
				if ((this._UserLevel != value))
				{
					this.OnUserLevelChanging(value);
					this.SendPropertyChanging();
					this._UserLevel = value;
					this.SendPropertyChanged("UserLevel");
					this.OnUserLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion", DbType="Int NOT NULL")]
		public int Promotion
		{
			get
			{
				return this._Promotion;
			}
			set
			{
				if ((this._Promotion != value))
				{
					this.OnPromotionChanging(value);
					this.SendPropertyChanging();
					this._Promotion = value;
					this.SendPropertyChanged("Promotion");
					this.OnPromotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSilver", DbType="Int NOT NULL")]
		public int PriceSilver
		{
			get
			{
				return this._PriceSilver;
			}
			set
			{
				if ((this._PriceSilver != value))
				{
					this.OnPriceSilverChanging(value);
					this.SendPropertyChanging();
					this._PriceSilver = value;
					this.SendPropertyChanged("PriceSilver");
					this.OnPriceSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceGold", DbType="Int NOT NULL")]
		public int PriceGold
		{
			get
			{
				return this._PriceGold;
			}
			set
			{
				if ((this._PriceGold != value))
				{
					this.OnPriceGoldChanging(value);
					this.SendPropertyChanging();
					this._PriceGold = value;
					this.SendPropertyChanged("PriceGold");
					this.OnPriceGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceUSD", DbType="Real NOT NULL")]
		public float PriceUSD
		{
			get
			{
				return this._PriceUSD;
			}
			set
			{
				if ((this._PriceUSD != value))
				{
					this.OnPriceUSDChanging(value);
					this.SendPropertyChanging();
					this._PriceUSD = value;
					this.SendPropertyChanged("PriceUSD");
					this.OnPriceUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceVND", DbType="Real NOT NULL")]
		public float PriceVND
		{
			get
			{
				return this._PriceVND;
			}
			set
			{
				if ((this._PriceVND != value))
				{
					this.OnPriceVNDChanging(value);
					this.SendPropertyChanging();
					this._PriceVND = value;
					this.SendPropertyChanged("PriceVND");
					this.OnPriceVNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int NOT NULL")]
		public int Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalStock", DbType="Int NOT NULL")]
		public int TotalStock
		{
			get
			{
				return this._TotalStock;
			}
			set
			{
				if ((this._TotalStock != value))
				{
					this.OnTotalStockChanging(value);
					this.SendPropertyChanging();
					this._TotalStock = value;
					this.SendPropertyChanged("TotalStock");
					this.OnTotalStockChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.House")]
	public partial class House : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _House_UID;
		
		private int _HouseId;
		
		private int _UserId;
		
		private int _PosX;
		
		private int _PosY;
		
		private EntityRef<Land> _Land;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHouse_UIDChanging(int value);
    partial void OnHouse_UIDChanged();
    partial void OnHouseIdChanging(int value);
    partial void OnHouseIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPosXChanging(int value);
    partial void OnPosXChanged();
    partial void OnPosYChanging(int value);
    partial void OnPosYChanged();
    #endregion
		
		public House()
		{
			this._Land = default(EntityRef<Land>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House_UID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int House_UID
		{
			get
			{
				return this._House_UID;
			}
			set
			{
				if ((this._House_UID != value))
				{
					this.OnHouse_UIDChanging(value);
					this.SendPropertyChanging();
					this._House_UID = value;
					this.SendPropertyChanged("House_UID");
					this.OnHouse_UIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseId", DbType="Int NOT NULL")]
		public int HouseId
		{
			get
			{
				return this._HouseId;
			}
			set
			{
				if ((this._HouseId != value))
				{
					this.OnHouseIdChanging(value);
					this.SendPropertyChanging();
					this._HouseId = value;
					this.SendPropertyChanged("HouseId");
					this.OnHouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Land.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosX", DbType="Int NOT NULL")]
		public int PosX
		{
			get
			{
				return this._PosX;
			}
			set
			{
				if ((this._PosX != value))
				{
					this.OnPosXChanging(value);
					this.SendPropertyChanging();
					this._PosX = value;
					this.SendPropertyChanged("PosX");
					this.OnPosXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosY", DbType="Int NOT NULL")]
		public int PosY
		{
			get
			{
				return this._PosY;
			}
			set
			{
				if ((this._PosY != value))
				{
					this.OnPosYChanging(value);
					this.SendPropertyChanging();
					this._PosY = value;
					this.SendPropertyChanged("PosY");
					this.OnPosYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Land_House", Storage="_Land", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Land Land
		{
			get
			{
				return this._Land.Entity;
			}
			set
			{
				Land previousValue = this._Land.Entity;
				if (((previousValue != value) 
							|| (this._Land.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Land.Entity = null;
						previousValue.Houses.Remove(this);
					}
					this._Land.Entity = value;
					if ((value != null))
					{
						value.Houses.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("Land");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Land")]
	public partial class Land : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _ExpandPoint;
		
		private int _ShrinkPoint;
		
		private int _LandSizeX;
		
		private int _LandSizeY;
		
		private System.Data.Linq.Binary _LandData;
		
		private EntitySet<House> _Houses;
		
		private EntityRef<UserEx> _UserEx;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnExpandPointChanging(int value);
    partial void OnExpandPointChanged();
    partial void OnShrinkPointChanging(int value);
    partial void OnShrinkPointChanged();
    partial void OnLandSizeXChanging(int value);
    partial void OnLandSizeXChanged();
    partial void OnLandSizeYChanging(int value);
    partial void OnLandSizeYChanged();
    partial void OnLandDataChanging(System.Data.Linq.Binary value);
    partial void OnLandDataChanged();
    #endregion
		
		public Land()
		{
			this._Houses = new EntitySet<House>(new Action<House>(this.attach_Houses), new Action<House>(this.detach_Houses));
			this._UserEx = default(EntityRef<UserEx>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserEx.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpandPoint", DbType="Int NOT NULL")]
		public int ExpandPoint
		{
			get
			{
				return this._ExpandPoint;
			}
			set
			{
				if ((this._ExpandPoint != value))
				{
					this.OnExpandPointChanging(value);
					this.SendPropertyChanging();
					this._ExpandPoint = value;
					this.SendPropertyChanged("ExpandPoint");
					this.OnExpandPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShrinkPoint", DbType="Int NOT NULL")]
		public int ShrinkPoint
		{
			get
			{
				return this._ShrinkPoint;
			}
			set
			{
				if ((this._ShrinkPoint != value))
				{
					this.OnShrinkPointChanging(value);
					this.SendPropertyChanging();
					this._ShrinkPoint = value;
					this.SendPropertyChanged("ShrinkPoint");
					this.OnShrinkPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandSizeX", DbType="Int NOT NULL")]
		public int LandSizeX
		{
			get
			{
				return this._LandSizeX;
			}
			set
			{
				if ((this._LandSizeX != value))
				{
					this.OnLandSizeXChanging(value);
					this.SendPropertyChanging();
					this._LandSizeX = value;
					this.SendPropertyChanged("LandSizeX");
					this.OnLandSizeXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandSizeY", DbType="Int NOT NULL")]
		public int LandSizeY
		{
			get
			{
				return this._LandSizeY;
			}
			set
			{
				if ((this._LandSizeY != value))
				{
					this.OnLandSizeYChanging(value);
					this.SendPropertyChanging();
					this._LandSizeY = value;
					this.SendPropertyChanged("LandSizeY");
					this.OnLandSizeYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandData", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LandData
		{
			get
			{
				return this._LandData;
			}
			set
			{
				if ((this._LandData != value))
				{
					this.OnLandDataChanging(value);
					this.SendPropertyChanging();
					this._LandData = value;
					this.SendPropertyChanged("LandData");
					this.OnLandDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Land_House", Storage="_Houses", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<House> Houses
		{
			get
			{
				return this._Houses;
			}
			set
			{
				this._Houses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_Land", Storage="_UserEx", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserEx UserEx
		{
			get
			{
				return this._UserEx.Entity;
			}
			set
			{
				UserEx previousValue = this._UserEx.Entity;
				if (((previousValue != value) 
							|| (this._UserEx.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEx.Entity = null;
						previousValue.Land = null;
					}
					this._UserEx.Entity = value;
					if ((value != null))
					{
						value.Land = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserEx");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Houses(House entity)
		{
			this.SendPropertyChanging();
			entity.Land = this;
		}
		
		private void detach_Houses(House entity)
		{
			this.SendPropertyChanging();
			entity.Land = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_UID;
		
		private int _UserId;
		
		private int _RoleId;
		
		private int _ElemId;
		
		private string _Name;
		
		private int _Status;
		
		private int _AIMode;
		
		private int _Grade;
		
		private int _Level;
		
		private int _Exp;
		
		private int _Energy;
		
		private System.DateTime _UseTime;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private EntityRef<UserEx> _UserEx;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_UIDChanging(int value);
    partial void OnRole_UIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnElemIdChanging(int value);
    partial void OnElemIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnAIModeChanging(int value);
    partial void OnAIModeChanged();
    partial void OnGradeChanging(int value);
    partial void OnGradeChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnExpChanging(int value);
    partial void OnExpChanged();
    partial void OnEnergyChanging(int value);
    partial void OnEnergyChanged();
    partial void OnUseTimeChanging(System.DateTime value);
    partial void OnUseTimeChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Role()
		{
			this._UserEx = default(EntityRef<UserEx>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_UID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Role_UID
		{
			get
			{
				return this._Role_UID;
			}
			set
			{
				if ((this._Role_UID != value))
				{
					this.OnRole_UIDChanging(value);
					this.SendPropertyChanging();
					this._Role_UID = value;
					this.SendPropertyChanged("Role_UID");
					this.OnRole_UIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserEx.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElemId", DbType="Int NOT NULL")]
		public int ElemId
		{
			get
			{
				return this._ElemId;
			}
			set
			{
				if ((this._ElemId != value))
				{
					this.OnElemIdChanging(value);
					this.SendPropertyChanging();
					this._ElemId = value;
					this.SendPropertyChanged("ElemId");
					this.OnElemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIMode", DbType="Int NOT NULL")]
		public int AIMode
		{
			get
			{
				return this._AIMode;
			}
			set
			{
				if ((this._AIMode != value))
				{
					this.OnAIModeChanging(value);
					this.SendPropertyChanging();
					this._AIMode = value;
					this.SendPropertyChanged("AIMode");
					this.OnAIModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int NOT NULL")]
		public int Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exp", DbType="Int NOT NULL")]
		public int Exp
		{
			get
			{
				return this._Exp;
			}
			set
			{
				if ((this._Exp != value))
				{
					this.OnExpChanging(value);
					this.SendPropertyChanging();
					this._Exp = value;
					this.SendPropertyChanged("Exp");
					this.OnExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Energy", DbType="Int NOT NULL")]
		public int Energy
		{
			get
			{
				return this._Energy;
			}
			set
			{
				if ((this._Energy != value))
				{
					this.OnEnergyChanging(value);
					this.SendPropertyChanging();
					this._Energy = value;
					this.SendPropertyChanged("Energy");
					this.OnEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UseTime
		{
			get
			{
				return this._UseTime;
			}
			set
			{
				if ((this._UseTime != value))
				{
					this.OnUseTimeChanging(value);
					this.SendPropertyChanging();
					this._UseTime = value;
					this.SendPropertyChanged("UseTime");
					this.OnUseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_Role", Storage="_UserEx", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserEx UserEx
		{
			get
			{
				return this._UserEx.Entity;
			}
			set
			{
				UserEx previousValue = this._UserEx.Entity;
				if (((previousValue != value) 
							|| (this._UserEx.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEx.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._UserEx.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserEx");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleHire")]
	public partial class RoleHire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_UID;
		
		private int _UserId;
		
		private int _RoleId;
		
		private int _RoleLevel;
		
		private int _Grade;
		
		private int _ElemId;
		
		private int _HireMode;
		
		private int _HireGold;
		
		private int _HireSilver;
		
		private EntityRef<UserEx> _UserEx;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_UIDChanging(int value);
    partial void OnRole_UIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnGradeChanging(int value);
    partial void OnGradeChanged();
    partial void OnElemIdChanging(int value);
    partial void OnElemIdChanged();
    partial void OnHireModeChanging(int value);
    partial void OnHireModeChanged();
    partial void OnHireGoldChanging(int value);
    partial void OnHireGoldChanged();
    partial void OnHireSilverChanging(int value);
    partial void OnHireSilverChanged();
    #endregion
		
		public RoleHire()
		{
			this._UserEx = default(EntityRef<UserEx>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Role_UID
		{
			get
			{
				return this._Role_UID;
			}
			set
			{
				if ((this._Role_UID != value))
				{
					this.OnRole_UIDChanging(value);
					this.SendPropertyChanging();
					this._Role_UID = value;
					this.SendPropertyChanged("Role_UID");
					this.OnRole_UIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserEx.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleLevel", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._RoleLevel;
			}
			set
			{
				if ((this._RoleLevel != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._RoleLevel = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int NOT NULL")]
		public int Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElemId", DbType="Int NOT NULL")]
		public int ElemId
		{
			get
			{
				return this._ElemId;
			}
			set
			{
				if ((this._ElemId != value))
				{
					this.OnElemIdChanging(value);
					this.SendPropertyChanging();
					this._ElemId = value;
					this.SendPropertyChanged("ElemId");
					this.OnElemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireMode", DbType="Int NOT NULL")]
		public int HireMode
		{
			get
			{
				return this._HireMode;
			}
			set
			{
				if ((this._HireMode != value))
				{
					this.OnHireModeChanging(value);
					this.SendPropertyChanging();
					this._HireMode = value;
					this.SendPropertyChanged("HireMode");
					this.OnHireModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireGold", DbType="Int NOT NULL")]
		public int HireGold
		{
			get
			{
				return this._HireGold;
			}
			set
			{
				if ((this._HireGold != value))
				{
					this.OnHireGoldChanging(value);
					this.SendPropertyChanging();
					this._HireGold = value;
					this.SendPropertyChanged("HireGold");
					this.OnHireGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireSilver", DbType="Int NOT NULL")]
		public int HireSilver
		{
			get
			{
				return this._HireSilver;
			}
			set
			{
				if ((this._HireSilver != value))
				{
					this.OnHireSilverChanging(value);
					this.SendPropertyChanging();
					this._HireSilver = value;
					this.SendPropertyChanged("HireSilver");
					this.OnHireSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEx_RoleHire", Storage="_UserEx", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserEx UserEx
		{
			get
			{
				return this._UserEx.Entity;
			}
			set
			{
				UserEx previousValue = this._UserEx.Entity;
				if (((previousValue != value) 
							|| (this._UserEx.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEx.Entity = null;
						previousValue.RoleHires.Remove(this);
					}
					this._UserEx.Entity = value;
					if ((value != null))
					{
						value.RoleHires.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserEx");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetRandUsersResult
	{
		
		private int _UserId;
		
		public GetRandUsersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
