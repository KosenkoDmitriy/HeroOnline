#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LOLServices.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LOLMainDB")]
	public partial class MainDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAsset(Asset instance);
    partial void UpdateAsset(Asset instance);
    partial void DeleteAsset(Asset instance);
    partial void InsertAuth(Auth instance);
    partial void UpdateAuth(Auth instance);
    partial void DeleteAuth(Auth instance);
    partial void InsertWorld(World instance);
    partial void UpdateWorld(World instance);
    partial void DeleteWorld(World instance);
    partial void InsertCommand(Command instance);
    partial void UpdateCommand(Command instance);
    partial void DeleteCommand(Command instance);
    partial void InsertCashLog(CashLog instance);
    partial void UpdateCashLog(CashLog instance);
    partial void DeleteCashLog(CashLog instance);
    #endregion
		
		public MainDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MainDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MainDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Asset> Assets
		{
			get
			{
				return this.GetTable<Asset>();
			}
		}
		
		public System.Data.Linq.Table<Auth> Auths
		{
			get
			{
				return this.GetTable<Auth>();
			}
		}
		
		public System.Data.Linq.Table<World> Worlds
		{
			get
			{
				return this.GetTable<World>();
			}
		}
		
		public System.Data.Linq.Table<Command> Commands
		{
			get
			{
				return this.GetTable<Command>();
			}
		}
		
		public System.Data.Linq.Table<CashLog> CashLogs
		{
			get
			{
				return this.GetTable<CashLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private string _NickName;
		
		private string _FullName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _HomePhone;
		
		private string _WorkPhone;
		
		private string _MobilePhone;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private EntitySet<Auth> _Auths;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Account()
		{
			this._Auths = new EntitySet<Auth>(new Action<Auth>(this.attach_Auths), new Action<Auth>(this.detach_Auths));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(32)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(64)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(32)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(32)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(32)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Auth", Storage="_Auths", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Auth> Auths
		{
			get
			{
				return this._Auths;
			}
			set
			{
				this._Auths.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Auths(Auth entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Auths(Auth entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asset")]
	public partial class Asset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssetId;
		
		private string _AssetName;
		
		private string _DownloadUrl;
		
		private int _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetIdChanging(int value);
    partial void OnAssetIdChanged();
    partial void OnAssetNameChanging(string value);
    partial void OnAssetNameChanged();
    partial void OnDownloadUrlChanging(string value);
    partial void OnDownloadUrlChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    #endregion
		
		public Asset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssetId
		{
			get
			{
				return this._AssetId;
			}
			set
			{
				if ((this._AssetId != value))
				{
					this.OnAssetIdChanging(value);
					this.SendPropertyChanging();
					this._AssetId = value;
					this.SendPropertyChanged("AssetId");
					this.OnAssetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string AssetName
		{
			get
			{
				return this._AssetName;
			}
			set
			{
				if ((this._AssetName != value))
				{
					this.OnAssetNameChanging(value);
					this.SendPropertyChanging();
					this._AssetName = value;
					this.SendPropertyChanged("AssetName");
					this.OnAssetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUrl", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string DownloadUrl
		{
			get
			{
				return this._DownloadUrl;
			}
			set
			{
				if ((this._DownloadUrl != value))
				{
					this.OnDownloadUrlChanging(value);
					this.SendPropertyChanging();
					this._DownloadUrl = value;
					this.SendPropertyChanged("DownloadUrl");
					this.OnDownloadUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auth")]
	public partial class Auth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthId;
		
		private int _UserId;
		
		private int _WorldId;
		
		private int _ActCode;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthIdChanging(int value);
    partial void OnAuthIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnWorldIdChanging(int value);
    partial void OnWorldIdChanged();
    partial void OnActCodeChanging(int value);
    partial void OnActCodeChanged();
    #endregion
		
		public Auth()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuthId
		{
			get
			{
				return this._AuthId;
			}
			set
			{
				if ((this._AuthId != value))
				{
					this.OnAuthIdChanging(value);
					this.SendPropertyChanging();
					this._AuthId = value;
					this.SendPropertyChanged("AuthId");
					this.OnAuthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldId", DbType="Int NOT NULL")]
		public int WorldId
		{
			get
			{
				return this._WorldId;
			}
			set
			{
				if ((this._WorldId != value))
				{
					this.OnWorldIdChanging(value);
					this.SendPropertyChanging();
					this._WorldId = value;
					this.SendPropertyChanged("WorldId");
					this.OnWorldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActCode", DbType="Int NOT NULL")]
		public int ActCode
		{
			get
			{
				return this._ActCode;
			}
			set
			{
				if ((this._ActCode != value))
				{
					this.OnActCodeChanging(value);
					this.SendPropertyChanging();
					this._ActCode = value;
					this.SendPropertyChanged("ActCode");
					this.OnActCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Auth", Storage="_Account", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Auths.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Auths.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.World")]
	public partial class World : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorldId;
		
		private string _WorldName;
		
		private string _ServiceAddress;
		
		private int _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorldIdChanging(int value);
    partial void OnWorldIdChanged();
    partial void OnWorldNameChanging(string value);
    partial void OnWorldNameChanged();
    partial void OnServiceAddressChanging(string value);
    partial void OnServiceAddressChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    #endregion
		
		public World()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WorldId
		{
			get
			{
				return this._WorldId;
			}
			set
			{
				if ((this._WorldId != value))
				{
					this.OnWorldIdChanging(value);
					this.SendPropertyChanging();
					this._WorldId = value;
					this.SendPropertyChanged("WorldId");
					this.OnWorldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string WorldName
		{
			get
			{
				return this._WorldName;
			}
			set
			{
				if ((this._WorldName != value))
				{
					this.OnWorldNameChanging(value);
					this.SendPropertyChanging();
					this._WorldName = value;
					this.SendPropertyChanged("WorldName");
					this.OnWorldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAddress", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string ServiceAddress
		{
			get
			{
				return this._ServiceAddress;
			}
			set
			{
				if ((this._ServiceAddress != value))
				{
					this.OnServiceAddressChanging(value);
					this.SendPropertyChanging();
					this._ServiceAddress = value;
					this.SendPropertyChanged("ServiceAddress");
					this.OnServiceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Command")]
	public partial class Command : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CmdId;
		
		private int _MasterId;
		
		private int _WorldId;
		
		private int _UserId;
		
		private string _UserName;
		
		private int _CmdCode;
		
		private string _CmdParams;
		
		private System.Nullable<System.DateTime> _SetTime;
		
		private System.Nullable<System.DateTime> _GetTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCmdIdChanging(int value);
    partial void OnCmdIdChanged();
    partial void OnMasterIdChanging(int value);
    partial void OnMasterIdChanged();
    partial void OnWorldIdChanging(int value);
    partial void OnWorldIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCmdCodeChanging(int value);
    partial void OnCmdCodeChanged();
    partial void OnCmdParamsChanging(string value);
    partial void OnCmdParamsChanged();
    partial void OnSetTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSetTimeChanged();
    partial void OnGetTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnGetTimeChanged();
    #endregion
		
		public Command()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmdId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CmdId
		{
			get
			{
				return this._CmdId;
			}
			set
			{
				if ((this._CmdId != value))
				{
					this.OnCmdIdChanging(value);
					this.SendPropertyChanging();
					this._CmdId = value;
					this.SendPropertyChanged("CmdId");
					this.OnCmdIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterId", DbType="Int NOT NULL")]
		public int MasterId
		{
			get
			{
				return this._MasterId;
			}
			set
			{
				if ((this._MasterId != value))
				{
					this.OnMasterIdChanging(value);
					this.SendPropertyChanging();
					this._MasterId = value;
					this.SendPropertyChanged("MasterId");
					this.OnMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldId", DbType="Int NOT NULL")]
		public int WorldId
		{
			get
			{
				return this._WorldId;
			}
			set
			{
				if ((this._WorldId != value))
				{
					this.OnWorldIdChanging(value);
					this.SendPropertyChanging();
					this._WorldId = value;
					this.SendPropertyChanged("WorldId");
					this.OnWorldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmdCode", DbType="Int NOT NULL")]
		public int CmdCode
		{
			get
			{
				return this._CmdCode;
			}
			set
			{
				if ((this._CmdCode != value))
				{
					this.OnCmdCodeChanging(value);
					this.SendPropertyChanging();
					this._CmdCode = value;
					this.SendPropertyChanged("CmdCode");
					this.OnCmdCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmdParams", DbType="VarChar(64)")]
		public string CmdParams
		{
			get
			{
				return this._CmdParams;
			}
			set
			{
				if ((this._CmdParams != value))
				{
					this.OnCmdParamsChanging(value);
					this.SendPropertyChanging();
					this._CmdParams = value;
					this.SendPropertyChanged("CmdParams");
					this.OnCmdParamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SetTime
		{
			get
			{
				return this._SetTime;
			}
			set
			{
				if ((this._SetTime != value))
				{
					this.OnSetTimeChanging(value);
					this.SendPropertyChanging();
					this._SetTime = value;
					this.SendPropertyChanged("SetTime");
					this.OnSetTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> GetTime
		{
			get
			{
				return this._GetTime;
			}
			set
			{
				if ((this._GetTime != value))
				{
					this.OnGetTimeChanging(value);
					this.SendPropertyChanging();
					this._GetTime = value;
					this.SendPropertyChanged("GetTime");
					this.OnGetTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashLog")]
	public partial class CashLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogTime;
		
		private int _UserId;
		
		private int _WorldId;
		
		private string _VenderId;
		
		private string _CardType;
		
		private string _CardSeri;
		
		private string _CardCode;
		
		private int _Amount;
		
		private int _RetCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnWorldIdChanging(int value);
    partial void OnWorldIdChanged();
    partial void OnVenderIdChanging(string value);
    partial void OnVenderIdChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnCardSeriChanging(string value);
    partial void OnCardSeriChanged();
    partial void OnCardCodeChanging(string value);
    partial void OnCardCodeChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnRetCodeChanging(int value);
    partial void OnRetCodeChanged();
    #endregion
		
		public CashLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldId", DbType="Int NOT NULL")]
		public int WorldId
		{
			get
			{
				return this._WorldId;
			}
			set
			{
				if ((this._WorldId != value))
				{
					this.OnWorldIdChanging(value);
					this.SendPropertyChanging();
					this._WorldId = value;
					this.SendPropertyChanged("WorldId");
					this.OnWorldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenderId", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string VenderId
		{
			get
			{
				return this._VenderId;
			}
			set
			{
				if ((this._VenderId != value))
				{
					this.OnVenderIdChanging(value);
					this.SendPropertyChanging();
					this._VenderId = value;
					this.SendPropertyChanged("VenderId");
					this.OnVenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="VarChar(16)")]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardSeri", DbType="VarChar(MAX)")]
		public string CardSeri
		{
			get
			{
				return this._CardSeri;
			}
			set
			{
				if ((this._CardSeri != value))
				{
					this.OnCardSeriChanging(value);
					this.SendPropertyChanging();
					this._CardSeri = value;
					this.SendPropertyChanged("CardSeri");
					this.OnCardSeriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardCode", DbType="VarChar(MAX)")]
		public string CardCode
		{
			get
			{
				return this._CardCode;
			}
			set
			{
				if ((this._CardCode != value))
				{
					this.OnCardCodeChanging(value);
					this.SendPropertyChanging();
					this._CardCode = value;
					this.SendPropertyChanged("CardCode");
					this.OnCardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetCode", DbType="Int NOT NULL")]
		public int RetCode
		{
			get
			{
				return this._RetCode;
			}
			set
			{
				if ((this._RetCode != value))
				{
					this.OnRetCodeChanging(value);
					this.SendPropertyChanging();
					this._RetCode = value;
					this.SendPropertyChanged("RetCode");
					this.OnRetCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
